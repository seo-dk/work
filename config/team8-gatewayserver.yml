server:
  port: 8080  # Gateway 서버 포트 (기본값: 8080)

spring:
  application:
    name: team8-gatewayserver  # Config Server에서 가져올 이름

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Eureka에서 서비스 목록 자동 감지
          lower-case-service-id: true  # 서비스 ID를 소문자로 변환하여 매칭
      routes:

        - id: accounts-service  # eureka team8-accounts 서비스 라우팅
          uri: lb://team8-accounts
          predicates:
            - Path=/accounts/** # /accounts 로 시작하는 모든 요청을 매핑
          filters:
            - StripPrefix=1  # /accounts 제거 후 백엔드 서비스로 전달
            - name: CircuitBreaker
              args:
                name: accountCircuitBreaker
                fallbackUri: forward:/contactSupport
            
        - id: cards-service  # eureka team8-cards 서비스 라우팅
          uri: lb://team8-cards
          predicates:
            - Path=/cards/** # /cards 로 시작하는 모든 요청을 매핑

        - id: loans-service  # eureka team8-loans 서비스 라우팅
          uri: lb://team8-loans
          predicates:
            - Path=/loans/** # /loans 로 시작하는 모든 요청을 매핑

eureka:
  client:
    service-url:
      defaultZone: http://team8-eureka:80/eureka/
      # defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true    

management:
  endpoint:
    gateway:
      access: unrestricted
      # enabled: true  # Gateway의 라우트 확인을 위한 Actuator 설정 # 운영중일때 유용
    
logging:
  level:
    com:
      eazybytes:
        gatewayserver: DEBUG
        
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 100 # 요청 수
      permittedNumberOfCallsInHalfOpenState: 2 # half-open 상태에서 허용되는 요청 수
      failureRateThreshold: 50 # 실패율 50% 이상이면 open
      waitDurationInOpenState: 10000 # open 상태 지속 시간
      
    instances:  
      accountCircuitBreaker:
        baseConfig: default
        slowCallRateThreshold: 50  # 50% 이상 느린 응답 시 OPEN
        slowCallDurationThreshold: 2000  # 2초 이상 걸리면 slow call로 판단
        minimumNumberOfCalls: 4    # 최소 4개의 요청이 있어야 통계 계산 시작
        slidingWindowSize: 6       # 최근 6개의 요청 기준으로 실패율 계산
